
name: RocksDB CI

on: [push, pull_request]

jobs:
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.56.1
          components: rustfmt
          profile: minimal
      - name: Run rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.56.1
          components: clippy
          profile: minimal
      - name: Run clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all --tests -- -A clippy::upper-case-acronyms -A clippy::missing_safety_doc -D warnings

  audit:
    name: Security audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  test:
    name: ${{ matrix.build }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [Linux, macOS, windows-2016, windows-2019]
        include:
          - build: Linux
            os: ubuntu-latest
          - build: macOS
            os: macos-latest
          - build: windows-2016
            os: windows-2016
          - build: windows-2019
            os: windows-2019
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.56.1
          target: ${{ matrix.target }}
          profile: minimal
      - name: Remove msys64 # Workaround to resolve link error with C:\msys64\mingw64\bin\libclang.dll
        if: runner.os == 'Windows'
        run: Remove-Item -LiteralPath "C:\msys64\" -Force -Recurse
      - name: Install dependencies
        if: runner.os == 'Windows'
        run: choco install llvm -y
      - name: Run librocksdb-sys tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path=librocksdb-sys/Cargo.toml
      - name: Run rocksdb tests
        uses: actions-rs/cargo@v1
        with:
          command: test
